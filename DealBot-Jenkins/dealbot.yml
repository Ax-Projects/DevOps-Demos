---
- name: Dealbot Deployment
  vars_files:
    - ansible_vars.yml
  hosts: all
  become: yes
  become_user: root
  tasks:
    - name: update apt
      apt:
        upgrade: dist
        update_cache: true

    - name: install git
      apt:
        name: git
        state: latest

    - name: install python
      apt:
        name: python
        state: latest
        update_cache: true
        install_recommends: yes

    - name: install pip
      apt:
        name: python3-pip
        state: present

    - name: install docker pre-requisites
      apt:
        pkg:
          - ca-certificates
          - curl
          - gnupg
        state: present

    - name: install docker GPG key
      shell: |
        install -m 0755 -d /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        chmod a+r /etc/apt/keyrings/docker.gpg

    - name: set-up docker repository
      shell: |
        echo \
        "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
        "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
        sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

    - name: update apt
      apt:
        update_cache: true

    - name: install docker
      apt:
        name: docker-ce
        state: latest
        install_recommends: yes

    - name: set-up directories
      file:
        path: /app
        state: directory

    - name: clone dealbot
      git:
        repo: https://github.com/Ax-Projects/DealBot
        dest: /app

    - name: install depenencies
      pip:
        requirements: /app/requirements.txt
        extra_args: "--no-cache-dir"

    - name: copy telegram token
      copy:
        src: /var/lib/jenkins/workspace/DealBot-Terraform-Demo/DealBot-Jenkins/keys.py
        dest: /app/keys.py
        mode: 0444

    - name: run selenium headless container
      shell: |
        docker run -d -p 4444:4444 -p 7900:7900 --shm-size="1g" selenium/standalone-chrome:latest

    - name: waiting for selenium to return ready status
      uri:
        url: http://localhost:4444/wd/hub/status
      register: response
      until: response | json_query('json.value.message') == "Selenium Grid ready."
      # until: response.json.value.message == "Selenium Grid ready."
      delay: 2
      retries: 10

    - name: run Dealbot
      shell: |
        cd /app
        python3 main.py
